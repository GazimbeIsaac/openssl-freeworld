diff -uNr openssl-1.0.1e/apps/ca.c openssl-1.0.1e-freeworld/apps/ca.c
--- openssl-1.0.1e/apps/ca.c	2013-06-12 22:26:27.947820304 -0700
+++ openssl-1.0.1e-freeworld/apps/ca.c	2013-06-12 22:40:08.593840450 -0700
@@ -100,7 +100,7 @@
 #define PROG ca_main
 
 #define BASE_SECTION	"ca"
-#define CONFIG_FILE "openssl.cnf"
+#define CONFIG_FILE "openssl-freeworld.cnf"
 
 #define ENV_DEFAULT_CA		"default_ca"
 
diff -uNr openssl-1.0.1e/apps/Makefile openssl-1.0.1e-freeworld/apps/Makefile
--- openssl-1.0.1e/apps/Makefile	2013-02-11 07:26:04.000000000 -0800
+++ openssl-1.0.1e-freeworld/apps/Makefile	2013-06-12 22:40:08.594840438 -0700
@@ -113,9 +113,9 @@
 	 chmod 755 $(INSTALL_PREFIX)$(OPENSSLDIR)/misc/$$i.new; \
 	 mv -f $(INSTALL_PREFIX)$(OPENSSLDIR)/misc/$$i.new $(INSTALL_PREFIX)$(OPENSSLDIR)/misc/$$i ); \
 	 done
-	@cp openssl.cnf $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf.new; \
-	chmod 644 $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf.new; \
-	mv -f  $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf.new $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf
+	@cp openssl-freeworld.cnf $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl-freeworld.cnf.new; \
+	chmod 644 $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl-freeworld.cnf.new; \
+	mv -f  $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl-freeworld.cnf.new $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl-freeworld.cnf
 
 tags:
 	ctags $(SRC)
diff -uNr openssl-1.0.1e/apps/openssl.cnf openssl-1.0.1e-freeworld/apps/openssl.cnf
--- openssl-1.0.1e/apps/openssl.cnf	2013-06-12 22:26:27.853821350 -0700
+++ openssl-1.0.1e-freeworld/apps/openssl.cnf	1969-12-31 16:00:00.000000000 -0800
@@ -1,352 +0,0 @@
-#
-# OpenSSL example configuration file.
-# This is mostly being used for generation of certificate requests.
-#
-
-# This definition stops the following lines choking if HOME isn't
-# defined.
-HOME			= .
-RANDFILE		= $ENV::HOME/.rnd
-
-# Extra OBJECT IDENTIFIER info:
-#oid_file		= $ENV::HOME/.oid
-oid_section		= new_oids
-
-# To use this configuration file with the "-extfile" option of the
-# "openssl x509" utility, name here the section containing the
-# X.509v3 extensions to use:
-# extensions		= 
-# (Alternatively, use a configuration file that has only
-# X.509v3 extensions in its main [= default] section.)
-
-[ new_oids ]
-
-# We can add new OIDs in here for use by 'ca', 'req' and 'ts'.
-# Add a simple OID like this:
-# testoid1=1.2.3.4
-# Or use config file substitution like this:
-# testoid2=${testoid1}.5.6
-
-# Policies used by the TSA examples.
-tsa_policy1 = 1.2.3.4.1
-tsa_policy2 = 1.2.3.4.5.6
-tsa_policy3 = 1.2.3.4.5.7
-
-####################################################################
-[ ca ]
-default_ca	= CA_default		# The default ca section
-
-####################################################################
-[ CA_default ]
-
-dir		= ./demoCA		# Where everything is kept
-certs		= $dir/certs		# Where the issued certs are kept
-crl_dir		= $dir/crl		# Where the issued crl are kept
-database	= $dir/index.txt	# database index file.
-#unique_subject	= no			# Set to 'no' to allow creation of
-					# several ctificates with same subject.
-new_certs_dir	= $dir/newcerts		# default place for new certs.
-
-certificate	= $dir/cacert.pem 	# The CA certificate
-serial		= $dir/serial 		# The current serial number
-crlnumber	= $dir/crlnumber	# the current crl number
-					# must be commented out to leave a V1 CRL
-crl		= $dir/crl.pem 		# The current CRL
-private_key	= $dir/private/cakey.pem# The private key
-RANDFILE	= $dir/private/.rand	# private random number file
-
-x509_extensions	= usr_cert		# The extentions to add to the cert
-
-# Comment out the following two lines for the "traditional"
-# (and highly broken) format.
-name_opt 	= ca_default		# Subject Name options
-cert_opt 	= ca_default		# Certificate field options
-
-# Extension copying option: use with caution.
-# copy_extensions = copy
-
-# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
-# so this is commented out by default to leave a V1 CRL.
-# crlnumber must also be commented out to leave a V1 CRL.
-# crl_extensions	= crl_ext
-
-default_days	= 365			# how long to certify for
-default_crl_days= 30			# how long before next CRL
-default_md	= default		# use public key default MD
-preserve	= no			# keep passed DN ordering
-
-# A few difference way of specifying how similar the request should look
-# For type CA, the listed attributes must be the same, and the optional
-# and supplied fields are just that :-)
-policy		= policy_match
-
-# For the CA policy
-[ policy_match ]
-countryName		= match
-stateOrProvinceName	= match
-organizationName	= match
-organizationalUnitName	= optional
-commonName		= supplied
-emailAddress		= optional
-
-# For the 'anything' policy
-# At this point in time, you must list all acceptable 'object'
-# types.
-[ policy_anything ]
-countryName		= optional
-stateOrProvinceName	= optional
-localityName		= optional
-organizationName	= optional
-organizationalUnitName	= optional
-commonName		= supplied
-emailAddress		= optional
-
-####################################################################
-[ req ]
-default_bits		= 2048
-default_md		= sha1
-default_keyfile 	= privkey.pem
-distinguished_name	= req_distinguished_name
-attributes		= req_attributes
-x509_extensions	= v3_ca	# The extentions to add to the self signed cert
-
-# Passwords for private keys if not present they will be prompted for
-# input_password = secret
-# output_password = secret
-
-# This sets a mask for permitted string types. There are several options. 
-# default: PrintableString, T61String, BMPString.
-# pkix	 : PrintableString, BMPString (PKIX recommendation before 2004)
-# utf8only: only UTF8Strings (PKIX recommendation after 2004).
-# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
-# MASK:XXXX a literal mask value.
-# WARNING: ancient versions of Netscape crash on BMPStrings or UTF8Strings.
-string_mask = utf8only
-
-# req_extensions = v3_req # The extensions to add to a certificate request
-
-[ req_distinguished_name ]
-countryName			= Country Name (2 letter code)
-countryName_default		= XX
-countryName_min			= 2
-countryName_max			= 2
-
-stateOrProvinceName		= State or Province Name (full name)
-#stateOrProvinceName_default	= Default Province
-
-localityName			= Locality Name (eg, city)
-localityName_default	= Default City
-
-0.organizationName		= Organization Name (eg, company)
-0.organizationName_default	= Default Company Ltd
-
-# we can do this but it is not needed normally :-)
-#1.organizationName		= Second Organization Name (eg, company)
-#1.organizationName_default	= World Wide Web Pty Ltd
-
-organizationalUnitName		= Organizational Unit Name (eg, section)
-#organizationalUnitName_default	=
-
-commonName			= Common Name (eg, your name or your server\'s hostname)
-commonName_max			= 64
-
-emailAddress			= Email Address
-emailAddress_max		= 64
-
-# SET-ex3			= SET extension number 3
-
-[ req_attributes ]
-challengePassword		= A challenge password
-challengePassword_min		= 4
-challengePassword_max		= 20
-
-unstructuredName		= An optional company name
-
-[ usr_cert ]
-
-# These extensions are added when 'ca' signs a request.
-
-# This goes against PKIX guidelines but some CAs do it and some software
-# requires this to avoid interpreting an end user certificate as a CA.
-
-basicConstraints=CA:FALSE
-
-# Here are some examples of the usage of nsCertType. If it is omitted
-# the certificate can be used for anything *except* object signing.
-
-# This is OK for an SSL server.
-# nsCertType			= server
-
-# For an object signing certificate this would be used.
-# nsCertType = objsign
-
-# For normal client use this is typical
-# nsCertType = client, email
-
-# and for everything including object signing:
-# nsCertType = client, email, objsign
-
-# This is typical in keyUsage for a client certificate.
-# keyUsage = nonRepudiation, digitalSignature, keyEncipherment
-
-# This will be displayed in Netscape's comment listbox.
-nsComment			= "OpenSSL Generated Certificate"
-
-# PKIX recommendations harmless if included in all certificates.
-subjectKeyIdentifier=hash
-authorityKeyIdentifier=keyid,issuer
-
-# This stuff is for subjectAltName and issuerAltname.
-# Import the email address.
-# subjectAltName=email:copy
-# An alternative to produce certificates that aren't
-# deprecated according to PKIX.
-# subjectAltName=email:move
-
-# Copy subject details
-# issuerAltName=issuer:copy
-
-#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
-#nsBaseUrl
-#nsRevocationUrl
-#nsRenewalUrl
-#nsCaPolicyUrl
-#nsSslServerName
-
-# This is required for TSA certificates.
-# extendedKeyUsage = critical,timeStamping
-
-[ v3_req ]
-
-# Extensions to add to a certificate request
-
-basicConstraints = CA:FALSE
-keyUsage = nonRepudiation, digitalSignature, keyEncipherment
-
-[ v3_ca ]
-
-
-# Extensions for a typical CA
-
-
-# PKIX recommendation.
-
-subjectKeyIdentifier=hash
-
-authorityKeyIdentifier=keyid:always,issuer
-
-# This is what PKIX recommends but some broken software chokes on critical
-# extensions.
-#basicConstraints = critical,CA:true
-# So we do this instead.
-basicConstraints = CA:true
-
-# Key usage: this is typical for a CA certificate. However since it will
-# prevent it being used as an test self-signed certificate it is best
-# left out by default.
-# keyUsage = cRLSign, keyCertSign
-
-# Some might want this also
-# nsCertType = sslCA, emailCA
-
-# Include email address in subject alt name: another PKIX recommendation
-# subjectAltName=email:copy
-# Copy issuer details
-# issuerAltName=issuer:copy
-
-# DER hex encoding of an extension: beware experts only!
-# obj=DER:02:03
-# Where 'obj' is a standard or added object
-# You can even override a supported extension:
-# basicConstraints= critical, DER:30:03:01:01:FF
-
-[ crl_ext ]
-
-# CRL extensions.
-# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.
-
-# issuerAltName=issuer:copy
-authorityKeyIdentifier=keyid:always
-
-[ proxy_cert_ext ]
-# These extensions should be added when creating a proxy certificate
-
-# This goes against PKIX guidelines but some CAs do it and some software
-# requires this to avoid interpreting an end user certificate as a CA.
-
-basicConstraints=CA:FALSE
-
-# Here are some examples of the usage of nsCertType. If it is omitted
-# the certificate can be used for anything *except* object signing.
-
-# This is OK for an SSL server.
-# nsCertType			= server
-
-# For an object signing certificate this would be used.
-# nsCertType = objsign
-
-# For normal client use this is typical
-# nsCertType = client, email
-
-# and for everything including object signing:
-# nsCertType = client, email, objsign
-
-# This is typical in keyUsage for a client certificate.
-# keyUsage = nonRepudiation, digitalSignature, keyEncipherment
-
-# This will be displayed in Netscape's comment listbox.
-nsComment			= "OpenSSL Generated Certificate"
-
-# PKIX recommendations harmless if included in all certificates.
-subjectKeyIdentifier=hash
-authorityKeyIdentifier=keyid,issuer
-
-# This stuff is for subjectAltName and issuerAltname.
-# Import the email address.
-# subjectAltName=email:copy
-# An alternative to produce certificates that aren't
-# deprecated according to PKIX.
-# subjectAltName=email:move
-
-# Copy subject details
-# issuerAltName=issuer:copy
-
-#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
-#nsBaseUrl
-#nsRevocationUrl
-#nsRenewalUrl
-#nsCaPolicyUrl
-#nsSslServerName
-
-# This really needs to be in place for it to be a proxy certificate.
-proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo
-
-####################################################################
-[ tsa ]
-
-default_tsa = tsa_config1	# the default TSA section
-
-[ tsa_config1 ]
-
-# These are used by the TSA reply generation only.
-dir		= ./demoCA		# TSA root directory
-serial		= $dir/tsaserial	# The current serial number (mandatory)
-crypto_device	= builtin		# OpenSSL engine to use for signing
-signer_cert	= $dir/tsacert.pem 	# The TSA signing certificate
-					# (optional)
-certs		= $dir/cacert.pem	# Certificate chain to include in reply
-					# (optional)
-signer_key	= $dir/private/tsakey.pem # The TSA private key (optional)
-
-default_policy	= tsa_policy1		# Policy if request did not specify it
-					# (optional)
-other_policies	= tsa_policy2, tsa_policy3	# acceptable policies (optional)
-digests		= md5, sha1		# Acceptable message digests (mandatory)
-accuracy	= secs:1, millisecs:500, microsecs:100	# (optional)
-clock_precision_digits  = 0	# number of digits after dot. (optional)
-ordering		= yes	# Is ordering defined for timestamps?
-				# (optional, default: no)
-tsa_name		= yes	# Must the TSA name be included in the reply?
-				# (optional, default: no)
-ess_cert_id_chain	= no	# Must the ESS cert id chain be included?
-				# (optional, default: no)
diff -uNr openssl-1.0.1e/apps/openssl-freeworld.cnf openssl-1.0.1e-freeworld/apps/openssl-freeworld.cnf
--- openssl-1.0.1e/apps/openssl-freeworld.cnf	1969-12-31 16:00:00.000000000 -0800
+++ openssl-1.0.1e-freeworld/apps/openssl-freeworld.cnf	2013-06-12 22:40:08.595840427 -0700
@@ -0,0 +1,352 @@
+#
+# OpenSSL example configuration file.
+# This is mostly being used for generation of certificate requests.
+#
+
+# This definition stops the following lines choking if HOME isn't
+# defined.
+HOME			= .
+RANDFILE		= $ENV::HOME/.rnd
+
+# Extra OBJECT IDENTIFIER info:
+#oid_file		= $ENV::HOME/.oid
+oid_section		= new_oids
+
+# To use this configuration file with the "-extfile" option of the
+# "openssl x509" utility, name here the section containing the
+# X.509v3 extensions to use:
+# extensions		= 
+# (Alternatively, use a configuration file that has only
+# X.509v3 extensions in its main [= default] section.)
+
+[ new_oids ]
+
+# We can add new OIDs in here for use by 'ca', 'req' and 'ts'.
+# Add a simple OID like this:
+# testoid1=1.2.3.4
+# Or use config file substitution like this:
+# testoid2=${testoid1}.5.6
+
+# Policies used by the TSA examples.
+tsa_policy1 = 1.2.3.4.1
+tsa_policy2 = 1.2.3.4.5.6
+tsa_policy3 = 1.2.3.4.5.7
+
+####################################################################
+[ ca ]
+default_ca	= CA_default		# The default ca section
+
+####################################################################
+[ CA_default ]
+
+dir		= ./demoCA		# Where everything is kept
+certs		= $dir/certs		# Where the issued certs are kept
+crl_dir		= $dir/crl		# Where the issued crl are kept
+database	= $dir/index.txt	# database index file.
+#unique_subject	= no			# Set to 'no' to allow creation of
+					# several ctificates with same subject.
+new_certs_dir	= $dir/newcerts		# default place for new certs.
+
+certificate	= $dir/cacert.pem 	# The CA certificate
+serial		= $dir/serial 		# The current serial number
+crlnumber	= $dir/crlnumber	# the current crl number
+					# must be commented out to leave a V1 CRL
+crl		= $dir/crl.pem 		# The current CRL
+private_key	= $dir/private/cakey.pem# The private key
+RANDFILE	= $dir/private/.rand	# private random number file
+
+x509_extensions	= usr_cert		# The extentions to add to the cert
+
+# Comment out the following two lines for the "traditional"
+# (and highly broken) format.
+name_opt 	= ca_default		# Subject Name options
+cert_opt 	= ca_default		# Certificate field options
+
+# Extension copying option: use with caution.
+# copy_extensions = copy
+
+# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
+# so this is commented out by default to leave a V1 CRL.
+# crlnumber must also be commented out to leave a V1 CRL.
+# crl_extensions	= crl_ext
+
+default_days	= 365			# how long to certify for
+default_crl_days= 30			# how long before next CRL
+default_md	= default		# use public key default MD
+preserve	= no			# keep passed DN ordering
+
+# A few difference way of specifying how similar the request should look
+# For type CA, the listed attributes must be the same, and the optional
+# and supplied fields are just that :-)
+policy		= policy_match
+
+# For the CA policy
+[ policy_match ]
+countryName		= match
+stateOrProvinceName	= match
+organizationName	= match
+organizationalUnitName	= optional
+commonName		= supplied
+emailAddress		= optional
+
+# For the 'anything' policy
+# At this point in time, you must list all acceptable 'object'
+# types.
+[ policy_anything ]
+countryName		= optional
+stateOrProvinceName	= optional
+localityName		= optional
+organizationName	= optional
+organizationalUnitName	= optional
+commonName		= supplied
+emailAddress		= optional
+
+####################################################################
+[ req ]
+default_bits		= 2048
+default_md		= sha1
+default_keyfile 	= privkey.pem
+distinguished_name	= req_distinguished_name
+attributes		= req_attributes
+x509_extensions	= v3_ca	# The extentions to add to the self signed cert
+
+# Passwords for private keys if not present they will be prompted for
+# input_password = secret
+# output_password = secret
+
+# This sets a mask for permitted string types. There are several options. 
+# default: PrintableString, T61String, BMPString.
+# pkix	 : PrintableString, BMPString (PKIX recommendation before 2004)
+# utf8only: only UTF8Strings (PKIX recommendation after 2004).
+# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
+# MASK:XXXX a literal mask value.
+# WARNING: ancient versions of Netscape crash on BMPStrings or UTF8Strings.
+string_mask = utf8only
+
+# req_extensions = v3_req # The extensions to add to a certificate request
+
+[ req_distinguished_name ]
+countryName			= Country Name (2 letter code)
+countryName_default		= XX
+countryName_min			= 2
+countryName_max			= 2
+
+stateOrProvinceName		= State or Province Name (full name)
+#stateOrProvinceName_default	= Default Province
+
+localityName			= Locality Name (eg, city)
+localityName_default	= Default City
+
+0.organizationName		= Organization Name (eg, company)
+0.organizationName_default	= Default Company Ltd
+
+# we can do this but it is not needed normally :-)
+#1.organizationName		= Second Organization Name (eg, company)
+#1.organizationName_default	= World Wide Web Pty Ltd
+
+organizationalUnitName		= Organizational Unit Name (eg, section)
+#organizationalUnitName_default	=
+
+commonName			= Common Name (eg, your name or your server\'s hostname)
+commonName_max			= 64
+
+emailAddress			= Email Address
+emailAddress_max		= 64
+
+# SET-ex3			= SET extension number 3
+
+[ req_attributes ]
+challengePassword		= A challenge password
+challengePassword_min		= 4
+challengePassword_max		= 20
+
+unstructuredName		= An optional company name
+
+[ usr_cert ]
+
+# These extensions are added when 'ca' signs a request.
+
+# This goes against PKIX guidelines but some CAs do it and some software
+# requires this to avoid interpreting an end user certificate as a CA.
+
+basicConstraints=CA:FALSE
+
+# Here are some examples of the usage of nsCertType. If it is omitted
+# the certificate can be used for anything *except* object signing.
+
+# This is OK for an SSL server.
+# nsCertType			= server
+
+# For an object signing certificate this would be used.
+# nsCertType = objsign
+
+# For normal client use this is typical
+# nsCertType = client, email
+
+# and for everything including object signing:
+# nsCertType = client, email, objsign
+
+# This is typical in keyUsage for a client certificate.
+# keyUsage = nonRepudiation, digitalSignature, keyEncipherment
+
+# This will be displayed in Netscape's comment listbox.
+nsComment			= "OpenSSL Generated Certificate"
+
+# PKIX recommendations harmless if included in all certificates.
+subjectKeyIdentifier=hash
+authorityKeyIdentifier=keyid,issuer
+
+# This stuff is for subjectAltName and issuerAltname.
+# Import the email address.
+# subjectAltName=email:copy
+# An alternative to produce certificates that aren't
+# deprecated according to PKIX.
+# subjectAltName=email:move
+
+# Copy subject details
+# issuerAltName=issuer:copy
+
+#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
+#nsBaseUrl
+#nsRevocationUrl
+#nsRenewalUrl
+#nsCaPolicyUrl
+#nsSslServerName
+
+# This is required for TSA certificates.
+# extendedKeyUsage = critical,timeStamping
+
+[ v3_req ]
+
+# Extensions to add to a certificate request
+
+basicConstraints = CA:FALSE
+keyUsage = nonRepudiation, digitalSignature, keyEncipherment
+
+[ v3_ca ]
+
+
+# Extensions for a typical CA
+
+
+# PKIX recommendation.
+
+subjectKeyIdentifier=hash
+
+authorityKeyIdentifier=keyid:always,issuer
+
+# This is what PKIX recommends but some broken software chokes on critical
+# extensions.
+#basicConstraints = critical,CA:true
+# So we do this instead.
+basicConstraints = CA:true
+
+# Key usage: this is typical for a CA certificate. However since it will
+# prevent it being used as an test self-signed certificate it is best
+# left out by default.
+# keyUsage = cRLSign, keyCertSign
+
+# Some might want this also
+# nsCertType = sslCA, emailCA
+
+# Include email address in subject alt name: another PKIX recommendation
+# subjectAltName=email:copy
+# Copy issuer details
+# issuerAltName=issuer:copy
+
+# DER hex encoding of an extension: beware experts only!
+# obj=DER:02:03
+# Where 'obj' is a standard or added object
+# You can even override a supported extension:
+# basicConstraints= critical, DER:30:03:01:01:FF
+
+[ crl_ext ]
+
+# CRL extensions.
+# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.
+
+# issuerAltName=issuer:copy
+authorityKeyIdentifier=keyid:always
+
+[ proxy_cert_ext ]
+# These extensions should be added when creating a proxy certificate
+
+# This goes against PKIX guidelines but some CAs do it and some software
+# requires this to avoid interpreting an end user certificate as a CA.
+
+basicConstraints=CA:FALSE
+
+# Here are some examples of the usage of nsCertType. If it is omitted
+# the certificate can be used for anything *except* object signing.
+
+# This is OK for an SSL server.
+# nsCertType			= server
+
+# For an object signing certificate this would be used.
+# nsCertType = objsign
+
+# For normal client use this is typical
+# nsCertType = client, email
+
+# and for everything including object signing:
+# nsCertType = client, email, objsign
+
+# This is typical in keyUsage for a client certificate.
+# keyUsage = nonRepudiation, digitalSignature, keyEncipherment
+
+# This will be displayed in Netscape's comment listbox.
+nsComment			= "OpenSSL Generated Certificate"
+
+# PKIX recommendations harmless if included in all certificates.
+subjectKeyIdentifier=hash
+authorityKeyIdentifier=keyid,issuer
+
+# This stuff is for subjectAltName and issuerAltname.
+# Import the email address.
+# subjectAltName=email:copy
+# An alternative to produce certificates that aren't
+# deprecated according to PKIX.
+# subjectAltName=email:move
+
+# Copy subject details
+# issuerAltName=issuer:copy
+
+#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
+#nsBaseUrl
+#nsRevocationUrl
+#nsRenewalUrl
+#nsCaPolicyUrl
+#nsSslServerName
+
+# This really needs to be in place for it to be a proxy certificate.
+proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo
+
+####################################################################
+[ tsa ]
+
+default_tsa = tsa_config1	# the default TSA section
+
+[ tsa_config1 ]
+
+# These are used by the TSA reply generation only.
+dir		= ./demoCA		# TSA root directory
+serial		= $dir/tsaserial	# The current serial number (mandatory)
+crypto_device	= builtin		# OpenSSL engine to use for signing
+signer_cert	= $dir/tsacert.pem 	# The TSA signing certificate
+					# (optional)
+certs		= $dir/cacert.pem	# Certificate chain to include in reply
+					# (optional)
+signer_key	= $dir/private/tsakey.pem # The TSA private key (optional)
+
+default_policy	= tsa_policy1		# Policy if request did not specify it
+					# (optional)
+other_policies	= tsa_policy2, tsa_policy3	# acceptable policies (optional)
+digests		= md5, sha1		# Acceptable message digests (mandatory)
+accuracy	= secs:1, millisecs:500, microsecs:100	# (optional)
+clock_precision_digits  = 0	# number of digits after dot. (optional)
+ordering		= yes	# Is ordering defined for timestamps?
+				# (optional, default: no)
+tsa_name		= yes	# Must the TSA name be included in the reply?
+				# (optional, default: no)
+ess_cert_id_chain	= no	# Must the ESS cert id chain be included?
+				# (optional, default: no)
diff -uNr openssl-1.0.1e/apps/srp.c openssl-1.0.1e-freeworld/apps/srp.c
--- openssl-1.0.1e/apps/srp.c	2013-02-11 07:26:04.000000000 -0800
+++ openssl-1.0.1e-freeworld/apps/srp.c	2013-06-12 22:40:08.596840416 -0700
@@ -74,7 +74,7 @@
 #define PROG srp_main
 
 #define BASE_SECTION	"srp"
-#define CONFIG_FILE "openssl.cnf"
+#define CONFIG_FILE "openssl-freeworld.cnf"
 
 #define ENV_RANDFILE		"RANDFILE"
 
diff -uNr openssl-1.0.1e/crypto/conf/cnf_save.c openssl-1.0.1e-freeworld/crypto/conf/cnf_save.c
--- openssl-1.0.1e/crypto/conf/cnf_save.c	2013-02-11 07:02:47.000000000 -0800
+++ openssl-1.0.1e-freeworld/crypto/conf/cnf_save.c	2013-06-12 22:40:08.596840416 -0700
@@ -67,7 +67,7 @@
 	LHASH *conf;
 	long l;
 
-	conf=CONF_load(NULL,"../../apps/openssl.cnf",&l);
+	conf=CONF_load(NULL,"../../apps/openssl-freeworld.cnf",&l);
 	if (conf == NULL)
 		{
 		fprintf(stderr,"error loading config, line %ld\n",l);
diff -uNr openssl-1.0.1e/demos/ssltest-ecc/ECCcertgen.sh openssl-1.0.1e-freeworld/demos/ssltest-ecc/ECCcertgen.sh
--- openssl-1.0.1e/demos/ssltest-ecc/ECCcertgen.sh	2013-02-11 07:02:48.000000000 -0800
+++ openssl-1.0.1e-freeworld/demos/ssltest-ecc/ECCcertgen.sh	2013-06-12 22:40:08.597840405 -0700
@@ -7,7 +7,7 @@
 # Path to the openssl program
 OPENSSL_CMD=$OPENSSL_DIR/apps/openssl
 # Option to find configuration file
-OPENSSL_CNF="-config $OPENSSL_DIR/apps/openssl.cnf"
+OPENSSL_CNF="-config $OPENSSL_DIR/apps/openssl-freeworld.cnf"
 # Directory where certificates are stored
 CERTS_DIR=./Certs
 # Directory where private key files are stored
@@ -66,7 +66,7 @@
 # The certificate is written into $TEST_CA_FILE.cert.pem
 $OPENSSL_CMD x509 -req -days $DAYS \
     -in $CERTS_DIR/$TEST_CA_FILE.req.pem \
-    -extfile $OPENSSL_DIR/apps/openssl.cnf \
+    -extfile $OPENSSL_DIR/apps/openssl-freeworld.cnf \
     -extensions v3_ca \
     -signkey $KEYS_DIR/$TEST_CA_FILE.key.pem \
     -out $CERTS_DIR/$TEST_CA_FILE.cert.pem
diff -uNr openssl-1.0.1e/demos/ssltest-ecc/ECC-RSAcertgen.sh openssl-1.0.1e-freeworld/demos/ssltest-ecc/ECC-RSAcertgen.sh
--- openssl-1.0.1e/demos/ssltest-ecc/ECC-RSAcertgen.sh	2013-02-11 07:02:48.000000000 -0800
+++ openssl-1.0.1e-freeworld/demos/ssltest-ecc/ECC-RSAcertgen.sh	2013-06-12 22:40:08.597840405 -0700
@@ -7,7 +7,7 @@
 # Path to the openssl program
 OPENSSL_CMD=$OPENSSL_DIR/apps/openssl
 # Option to find configuration file
-OPENSSL_CNF="-config $OPENSSL_DIR/apps/openssl.cnf"
+OPENSSL_CNF="-config $OPENSSL_DIR/apps/openssl-freeworld.cnf"
 # Directory where certificates are stored
 CERTS_DIR=./Certs
 # Directory where private key files are stored
diff -uNr openssl-1.0.1e/demos/ssltest-ecc/RSAcertgen.sh openssl-1.0.1e-freeworld/demos/ssltest-ecc/RSAcertgen.sh
--- openssl-1.0.1e/demos/ssltest-ecc/RSAcertgen.sh	2013-02-11 07:02:48.000000000 -0800
+++ openssl-1.0.1e-freeworld/demos/ssltest-ecc/RSAcertgen.sh	2013-06-12 22:40:08.598840394 -0700
@@ -7,7 +7,7 @@
 # Path to the openssl program
 OPENSSL_CMD=$OPENSSL_DIR/apps/openssl
 # Option to find configuration file
-OPENSSL_CNF="-config $OPENSSL_DIR/apps/openssl.cnf"
+OPENSSL_CNF="-config $OPENSSL_DIR/apps/openssl-freeworld.cnf"
 # Directory where certificates are stored
 CERTS_DIR=./Certs
 # Directory where private key files are stored
@@ -53,7 +53,7 @@
 
 $OPENSSL_CMD x509 -req -days $DAYS \
     -in $CERTS_DIR/$TEST_CA_FILE.req.pem \
-    -extfile $OPENSSL_DIR/apps/openssl.cnf \
+    -extfile $OPENSSL_DIR/apps/openssl-freeworld.cnf \
     -extensions v3_ca \
     -signkey $KEYS_DIR/$TEST_CA_FILE.key.pem \
     -out $CERTS_DIR/$TEST_CA_FILE.cert.pem
diff -uNr openssl-1.0.1e/e_os.h openssl-1.0.1e-freeworld/e_os.h
--- openssl-1.0.1e/e_os.h	2013-02-11 07:26:04.000000000 -0800
+++ openssl-1.0.1e-freeworld/e_os.h	2013-06-12 22:40:08.598840394 -0700
@@ -358,7 +358,7 @@
 #  ifndef R_OK
 #    define R_OK	4
 #  endif
-#  define OPENSSL_CONF	"openssl.cnf"
+#  define OPENSSL_CONF	"openssl-freeworld.cnf"
 #  define SSLEAY_CONF	OPENSSL_CONF
 #  define NUL_DEV	"nul"
 #  define RFILE		".rnd"
@@ -380,7 +380,7 @@
 #    else
 #      include <unixlib.h>
 #    endif
-#    define OPENSSL_CONF	"openssl.cnf"
+#    define OPENSSL_CONF	"openssl-freeworld.cnf"
 #    define SSLEAY_CONF		OPENSSL_CONF
 #    define RFILE		".rnd"
 #    define LIST_SEPARATOR_CHAR ','
@@ -429,7 +429,7 @@
 #    define _kbhit kbhit
 #    define _O_TEXT O_TEXT
 #    define _O_BINARY O_BINARY
-#    define OPENSSL_CONF   "openssl.cnf"
+#    define OPENSSL_CONF   "openssl-freeworld.cnf"
 #    define SSLEAY_CONF    OPENSSL_CONF
 #    define RFILE    ".rnd"
 #    define LIST_SEPARATOR_CHAR ';'
@@ -462,7 +462,7 @@
 #      include <fcntl.h>
 #    endif
 
-#    define OPENSSL_CONF	"openssl.cnf"
+#    define OPENSSL_CONF	"openssl-freeworld.cnf"
 #    define SSLEAY_CONF		OPENSSL_CONF
 #    define RFILE		".rnd"
 #    define LIST_SEPARATOR_CHAR ':'
diff -uNr openssl-1.0.1e/Makefile openssl-1.0.1e-freeworld/Makefile
--- openssl-1.0.1e/Makefile	2013-06-12 22:26:28.209817390 -0700
+++ openssl-1.0.1e-freeworld/Makefile	2013-06-12 22:40:08.599840383 -0700
@@ -359,7 +359,7 @@
 libcrypto.pc: Makefile
 	@ ( echo 'prefix=$(INSTALLTOP)'; \
 	    echo 'exec_prefix=$${prefix}'; \
-	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
+	    echo 'libdir=$${exec_prefix}/$(LIBDIR)/openssl-freeworld'; \
 	    echo 'includedir=$${prefix}/include'; \
 	    echo ''; \
 	    echo 'Name: OpenSSL-libcrypto'; \
@@ -373,7 +373,7 @@
 libssl.pc: Makefile
 	@ ( echo 'prefix=$(INSTALLTOP)'; \
 	    echo 'exec_prefix=$${prefix}'; \
-	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
+	    echo 'libdir=$${exec_prefix}/$(LIBDIR)/openssl-freeworld'; \
 	    echo 'includedir=$${prefix}/include'; \
 	    echo ''; \
 	    echo 'Name: OpenSSL'; \
@@ -387,7 +387,7 @@
 openssl.pc: Makefile
 	@ ( echo 'prefix=$(INSTALLTOP)'; \
 	    echo 'exec_prefix=$${prefix}'; \
-	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
+	    echo 'libdir=$${exec_prefix}/$(LIBDIR)/openssl-freeworld'; \
 	    echo 'includedir=$${prefix}/include'; \
 	    echo ''; \
 	    echo 'Name: OpenSSL'; \
@@ -454,8 +454,8 @@
 
 tests: rehash
 	@(cd test && echo "testing..." && \
-	$(CLEARENV) && $(MAKE) -e $(BUILDENV) TOP=.. TESTS='$(TESTS)' OPENSSL_DEBUG_MEMORY=on OPENSSL_CONF=../apps/openssl.cnf tests );
-	OPENSSL_CONF=apps/openssl.cnf util/opensslwrap.sh version -a
+	$(CLEARENV) && $(MAKE) -e $(BUILDENV) TOP=.. TESTS='$(TESTS)' OPENSSL_DEBUG_MEMORY=on OPENSSL_CONF=../apps/openssl-freeworld.cnf tests );
+	OPENSSL_CONF=apps/openssl-freeworld.cnf util/opensslwrap.sh version -a
 
 report:
 	@$(PERL) util/selftest.pl
@@ -491,8 +491,8 @@
 crypto/objects/obj_xref.h: crypto/objects/objxref.pl crypto/objects/obj_xref.txt crypto/objects/obj_mac.num
 	$(PERL) crypto/objects/objxref.pl crypto/objects/obj_mac.num crypto/objects/obj_xref.txt >crypto/objects/obj_xref.h
 
-apps/openssl-vms.cnf: apps/openssl.cnf
-	$(PERL) VMS/VMSify-conf.pl < apps/openssl.cnf > apps/openssl-vms.cnf
+apps/openssl-vms.cnf: apps/openssl-freeworld.cnf
+	$(PERL) VMS/VMSify-conf.pl < apps/openssl-freeworld.cnf > apps/openssl-vms.cnf
 
 crypto/bn/bn_prime.h: crypto/bn/bn_prime.pl
 	$(PERL) crypto/bn/bn_prime.pl >crypto/bn/bn_prime.h
diff -uNr openssl-1.0.1e/Makefile.org openssl-1.0.1e-freeworld/Makefile.org
--- openssl-1.0.1e/Makefile.org	2013-06-12 22:26:27.964820115 -0700
+++ openssl-1.0.1e-freeworld/Makefile.org	2013-06-12 22:46:18.065671349 -0700
@@ -357,7 +357,7 @@
 libcrypto.pc: Makefile
 	@ ( echo 'prefix=$(INSTALLTOP)'; \
 	    echo 'exec_prefix=$${prefix}'; \
-	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
+	    echo 'libdir=$${exec_prefix}/$(LIBDIR)/openssl-freeworld'; \
 	    echo 'includedir=$${prefix}/include'; \
 	    echo ''; \
 	    echo 'Name: OpenSSL-libcrypto'; \
@@ -371,7 +371,7 @@
 libssl.pc: Makefile
 	@ ( echo 'prefix=$(INSTALLTOP)'; \
 	    echo 'exec_prefix=$${prefix}'; \
-	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
+	    echo 'libdir=$${exec_prefix}/$(LIBDIR)/openssl-freeworld'; \
 	    echo 'includedir=$${prefix}/include'; \
 	    echo ''; \
 	    echo 'Name: OpenSSL'; \
@@ -385,7 +385,7 @@
 openssl.pc: Makefile
 	@ ( echo 'prefix=$(INSTALLTOP)'; \
 	    echo 'exec_prefix=$${prefix}'; \
-	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
+	    echo 'libdir=$${exec_prefix}/$(LIBDIR)/openssl-freeworld'; \
 	    echo 'includedir=$${prefix}/include'; \
 	    echo ''; \
 	    echo 'Name: OpenSSL'; \
@@ -452,8 +452,8 @@
 
 tests: rehash
 	@(cd test && echo "testing..." && \
-	$(CLEARENV) && $(MAKE) -e $(BUILDENV) TOP=.. TESTS='$(TESTS)' OPENSSL_DEBUG_MEMORY=on OPENSSL_CONF=../apps/openssl.cnf tests );
-	OPENSSL_CONF=apps/openssl.cnf util/opensslwrap.sh version -a
+	$(CLEARENV) && $(MAKE) -e $(BUILDENV) TOP=.. TESTS='$(TESTS)' OPENSSL_DEBUG_MEMORY=on OPENSSL_CONF=../apps/openssl-freeworld.cnf tests );
+	OPENSSL_CONF=apps/openssl-freeworld.cnf util/opensslwrap.sh version -a
 
 report:
 	@$(PERL) util/selftest.pl
@@ -489,8 +489,8 @@
 crypto/objects/obj_xref.h: crypto/objects/objxref.pl crypto/objects/obj_xref.txt crypto/objects/obj_mac.num
 	$(PERL) crypto/objects/objxref.pl crypto/objects/obj_mac.num crypto/objects/obj_xref.txt >crypto/objects/obj_xref.h
 
-apps/openssl-vms.cnf: apps/openssl.cnf
-	$(PERL) VMS/VMSify-conf.pl < apps/openssl.cnf > apps/openssl-vms.cnf
+apps/openssl-vms.cnf: apps/openssl-freeworld.cnf
+	$(PERL) VMS/VMSify-conf.pl < apps/openssl-freeworld.cnf > apps/openssl-vms.cnf
 
 crypto/bn/bn_prime.h: crypto/bn/bn_prime.pl
 	$(PERL) crypto/bn/bn_prime.pl >crypto/bn/bn_prime.h
diff -uNr openssl-1.0.1e/Netware/do_tests.pl openssl-1.0.1e-freeworld/Netware/do_tests.pl
--- openssl-1.0.1e/Netware/do_tests.pl	2013-06-12 22:26:28.078818847 -0700
+++ openssl-1.0.1e-freeworld/Netware/do_tests.pl	2013-06-12 22:40:08.600840372 -0700
@@ -9,7 +9,7 @@
 my $app_path       = "$base_path\\apps";
 
 my $tmp_cert       = "$output_path\\cert.tmp";
-my $OpenSSL_config = "$app_path\\openssl.cnf";
+my $OpenSSL_config = "$app_path\\openssl-freeworld.cnf";
 my $log_file       = "$output_path\\tests.log";
 
 my $pause = 0;
diff -uNr openssl-1.0.1e/test/testca openssl-1.0.1e-freeworld/test/testca
--- openssl-1.0.1e/test/testca	2013-02-11 07:02:48.000000000 -0800
+++ openssl-1.0.1e-freeworld/test/testca	2013-06-12 22:40:08.600840372 -0700
@@ -30,7 +30,7 @@
 fi
 
 
-SSLEAY_CONFIG="-config ../apps/openssl.cnf"
+SSLEAY_CONFIG="-config ../apps/openssl-freeworld.cnf"
 export SSLEAY_CONFIG
 $SH ../apps/CA.sh -sign  <<EOF
 y
diff -uNr openssl-1.0.1e/test/testss openssl-1.0.1e-freeworld/test/testss
--- openssl-1.0.1e/test/testss	2013-02-11 07:02:48.000000000 -0800
+++ openssl-1.0.1e-freeworld/test/testss	2013-06-12 22:40:08.600840372 -0700
@@ -4,7 +4,7 @@
 reqcmd="../util/shlib_wrap.sh ../apps/openssl req"
 x509cmd="../util/shlib_wrap.sh ../apps/openssl x509 $digest"
 verifycmd="../util/shlib_wrap.sh ../apps/openssl verify"
-dummycnf="../apps/openssl.cnf"
+dummycnf="../apps/openssl-freeworld.cnf"
 
 CAkey="keyCA.ss"
 CAcert="certCA.ss"
diff -uNr openssl-1.0.1e/test/treq openssl-1.0.1e-freeworld/test/treq
--- openssl-1.0.1e/test/treq	2013-02-11 07:02:48.000000000 -0800
+++ openssl-1.0.1e-freeworld/test/treq	2013-06-12 22:40:08.601840361 -0700
@@ -1,6 +1,6 @@
 #!/bin/sh
 
-cmd='../util/shlib_wrap.sh ../apps/openssl req -config ../apps/openssl.cnf'
+cmd='../util/shlib_wrap.sh ../apps/openssl req -config ../apps/openssl-freeworld.cnf'
 
 if [ "$1"x != "x" ]; then
 	t=$1
diff -uNr openssl-1.0.1e/util/cygwin.sh openssl-1.0.1e-freeworld/util/cygwin.sh
--- openssl-1.0.1e/util/cygwin.sh	2013-02-11 07:26:04.000000000 -0800
+++ openssl-1.0.1e-freeworld/util/cygwin.sh	2013-06-12 22:40:08.601840361 -0700
@@ -136,7 +136,7 @@
      usr/bin/cyg*dll
 # Base package
 find etc usr/bin/openssl.exe usr/bin/c_rehash usr/lib/engines usr/share/doc \
-     usr/ssl/certs usr/ssl/man/man[157] usr/ssl/misc usr/ssl/openssl.cnf \
+     usr/ssl/certs usr/ssl/man/man[157] usr/ssl/misc usr/ssl/openssl-freeworld.cnf \
      usr/ssl/private \
      -empty -o \! -type d |
 tar cjfT openssl-${VERSION}-${SUBVERSION}.tar.bz2 -
diff -uNr openssl-1.0.1e/util/mk1mf.pl openssl-1.0.1e-freeworld/util/mk1mf.pl
--- openssl-1.0.1e/util/mk1mf.pl	2013-06-12 22:26:28.054819114 -0700
+++ openssl-1.0.1e-freeworld/util/mk1mf.pl	2013-06-12 22:40:08.602840350 -0700
@@ -579,7 +579,7 @@
 	\$(CP) \"\$(INCO_D)${o}*.\[ch\]\" \"\$(INSTALLTOP)${o}include${o}openssl\"
 	\$(CP) \"\$(BIN_D)$o\$(E_EXE)$exep \$(INSTALLTOP)${o}bin\"
 	\$(MKDIR) \"\$(OPENSSLDIR)\"
-	\$(CP) apps${o}openssl.cnf \"\$(OPENSSLDIR)\"
+	\$(CP) apps${o}openssl-freeworld.cnf \"\$(OPENSSLDIR)\"
 $extra_install
 
 
diff -uNr openssl-1.0.1e/util/mkcerts.sh openssl-1.0.1e-freeworld/util/mkcerts.sh
--- openssl-1.0.1e/util/mkcerts.sh	2013-02-11 07:02:48.000000000 -0800
+++ openssl-1.0.1e-freeworld/util/mkcerts.sh	2013-06-12 22:40:08.602840350 -0700
@@ -13,7 +13,7 @@
  
 CAbits=1024
 SSLEAY="../apps/openssl"
-CONF="-config ../apps/openssl.cnf"
+CONF="-config ../apps/openssl-freeworld.cnf"
 
 # create pca request.
 echo creating $CAbits bit PCA cert request
